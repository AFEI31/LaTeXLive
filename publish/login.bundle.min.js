/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 66);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : null;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 1:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join('');
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === 'string') {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring

  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || '').concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
  return "/*# ".concat(data, " */");
}

/***/ }),

/***/ 10:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var setStyle = exports.setStyle = {
  buttongroup_primary: function buttongroup_primary(btn) {
    $(btn).click(function () {
      $(".btn-filter").attr("class", "btn btn-outline-primary btn-filter");
      $(this).attr("class", "btn btn-outline-primary btn-filter myactive");
    });
  }
};

var UrlParams = exports.UrlParams = {
  get: function get(key) {
    var query = window.location.search.substring(1);
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
      var pair = vars[i].split("=");
      if (pair[0] == key) {
        return pair[1];
      }
    }
    return false;
  }
};

var StringDeal = exports.StringDeal = {
  dealHide_Mail: function dealHide_Mail(mail) {
    if (mail == "") {
      return "未绑定";
    }
    // var reg = /^(.*).{4}$/;
    // mail = mail.replace(reg, "$1****");
    // return mail;
    if (String(mail).indexOf("@") > 0) {
      var str = mail.split("@"),
          _s = "";
      if (str[0].length > 3) {
        for (var i = 0; i < str[0].length - 3; i++) {
          _s += "*";
        }
      }
      var new_email = str[0].substr(0, 3) + _s + "@" + str[1];
      return new_email;
    }
  },
  dealHide_Tel: function dealHide_Tel(tel) {
    if (tel == "") {
      return "未绑定";
    }
    tel = tel.replace(/(\d{3})\d{4}(\d{4})/, "$1****$2");
    return tel;
  },
  toMD5: function toMD5(str) {
    return hex_md5(str);
  }
};

var LoadComplete = exports.LoadComplete = {
  closeLoadingMask: function closeLoadingMask() {
    setTimeout(function () {
      document.getElementById("loading").style.display = "none";
    }, 200);
  }
};

/***/ }),

/***/ 11:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var api = exports.api = {
  path_api: {},
  init: function init(opt) {
    api.path_api = opt.path_api;
  },
  loginByMyToken: function loginByMyToken() {
    var pro = new Promise(function (resolve, reject) {
      var _token = api.getMyTokenFromLocal();
      if (!_token) {
        reject();
        return;
      }
      var url = api.path_api.Root + api.path_api.Controller.LoginByMyToken;
      var data = {
        mytoken: _token
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  loginByAccount: function loginByAccount(loginname, password) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.LoginByAccount;
      var data = {
        loginname: loginname,
        password: password
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  regByAccount: function regByAccount(username, password, tel, mail) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.RegByAccount;
      var data = {
        username: username,
        password: password,
        tel: tel,
        mail: mail
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  updateUser: function updateUser(obj_userinfo, code) {
    var pro = new Promise(function (resolve, reject) {
      code = code == "" || code == undefined || code == "undefined" ? "" : code;
      obj_userinfo.Tel = obj_userinfo.Tel == "" ? "ForceEmpty" : obj_userinfo.Tel;
      obj_userinfo.Mail = obj_userinfo.Mail == "" ? "ForceEmpty" : obj_userinfo.Mail;
      obj_userinfo.Wechat = obj_userinfo.Wechat == "" ? "ForceEmpty" : obj_userinfo.Wechat;
      obj_userinfo.Qq = obj_userinfo.Qq == "" ? "ForceEmpty" : obj_userinfo.Qq;
      obj_userinfo.Weibo = obj_userinfo.Weibo == "" ? "ForceEmpty" : obj_userinfo.Weibo;

      var _token = api.getMyTokenFromLocal();
      if (!_token) {
        reject();
        return;
      }
      var url = api.path_api.Root + api.path_api.Controller.UpdateUser;
      var data = {
        mytoken: _token,
        code: code,
        username: obj_userinfo.Username,
        password: obj_userinfo.Password,
        tel: obj_userinfo.Tel,
        mail: obj_userinfo.Mail,
        wechat: obj_userinfo.Wechat,
        qq: obj_userinfo.Qq,
        weibo: obj_userinfo.Weibo,
        portrait: obj_userinfo.Portrait,
        nickname: obj_userinfo.Nickname
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  removeUser: function removeUser() {
    //
  },
  loginByWX: function loginByWX(wxcode) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.LoginByWX;
      var data = {
        code: wxcode
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  WXBind: function WXBind(wxcode) {
    var pro = new Promise(function (resolve, reject) {
      var _token = api.getMyTokenFromLocal();
      if (!_token) {
        reject();
        return;
      }
      var url = api.path_api.Root + api.path_api.Controller.WXBind;
      var data = {
        mytoken: _token,
        code: wxcode
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  loginByMessage: function loginByMessage(tel, code) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.LoginByMessage;
      var data = {
        tel: tel,
        code: code
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  sendMessageCode_Identity: function sendMessageCode_Identity() {
    var pro = new Promise(function (resolve, reject) {
      var _token = api.getMyTokenFromLocal();
      if (!_token) {
        reject();
        return;
      }
      var url = api.path_api.Root + api.path_api.Controller.SendMessageCode_Identity;
      var data = {
        mytoken: _token
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  sendMessageCode_Login: function sendMessageCode_Login(tel) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.SendMessageCode_Login;
      var data = {
        tel: tel
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  getRemainTime: function getRemainTime(tel) {
    var pro = new Promise(function (resolve, reject) {
      var url = api.path_api.Root + api.path_api.Controller.GetRemainTime;
      var data = {
        tel: tel
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },
  getLaTexFromMathPix: function getLaTexFromMathPix(src) {
    var pro = new Promise(function (resolve, reject) {
      var _token = api.getMyTokenFromLocal();
      if (!_token) {
        reject("未登录");
        return;
      }
      var url = api.path_api.Root + api.path_api.Controller.GetLaTexFromMathPix;
      var data = {
        mytoken: _token,
        src: src
      };
      api.ajax(url, data).then(function (re) {
        if (re.detail.token) {
          api.setMyTokenToLocal(re.detail.token);
        }
        resolve(re);
      }, function (re) {
        console.log(re);
        reject(re);
      });
    });
    return pro;
  },

  /** 向后台发送http请求
   * @param {*} url
   * @param {*} data
   * @returns
   */
  ajax: function ajax(url, data) {
    var pro = new Promise(function (resolve, reject) {
      $.ajax({
        type: "POST",
        dataType: "json",
        contentType: "application/json",
        url: url,
        data: JSON.stringify(data),
        success: function success(re) {
          resolve(re);
        },
        error: function error(err) {
          reject(err);
        }
      });
    });
    return pro;
  },
  /** 读取本地磁盘存储的token信息 */
  getMyTokenFromLocal: function getMyTokenFromLocal() {
    var keyname = "mytoken";
    if (localStorage.hasOwnProperty(keyname)) {
      var rtnstr = localStorage.getItem(keyname);
      if (rtnstr == undefined || rtnstr == "" || rtnstr == "undefined") {
        return false;
      } else {
        return rtnstr;
      }
    } else {
      return false;
    }
  },
  /** 把token信息存储到本地磁盘
   * @param {*} obj -将要在本地序列化存储的对象
   */
  setMyTokenToLocal: function setMyTokenToLocal(token) {
    var keyname = "mytoken";
    localStorage.setItem(keyname, token);
  },
  /** 删除本地token信息 */
  removeMyTokenFromLocal: function removeMyTokenFromLocal() {
    var keyname = "mytoken";
    localStorage.removeItem(keyname);
  }
};

/***/ }),

/***/ 14:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Eject = exports.Eject = function Eject() {
  _classCallCheck(this, Eject);

  var _this = this;
  // 全屏遮罩背景
  var qback = $('<div class="qback"></div>');
  // alert提示窗
  _this.Ealert = function (obj) {
    if (typeof obj.type == "undefined") {
      obj.type = "info";
    }
    if (typeof obj.title == "undefined") {
      obj.title = "提示";
    }
    if (typeof obj.message == "undefined") {
      obj.message = "是否要做些什么？";
    }
    if (typeof obj.okbtntext == "undefined") {
      obj.okbtntext = "确定";
    }
    var alertIcon = "";
    switch (obj.type) {
      case "success":
        alertIcon = "<span style='color:#28a745;font-size:25px;'><i class='fa fa-check-circle'></i></span>";
        break;
      case "danger":
        alertIcon = "<span style='color:#dc3545;font-size:25px;'><i class='fa fa-times-circle'></i></span>";
        break;
      case "warning":
        alertIcon = "<span style='color:#ffc107;font-size:25px;'><i class='fa fa-exclamation-circle'></i></span>";
        break;
      case "info":
        alertIcon = "<span style='color:#17a2b8;font-size:25px;'><i class='fa fa-info-circle'></i></span>";
        break;
      default:
        alertIcon = obj.type;
        break;
    }
    var alertBox = $('<div class="alertBox"></div>');
    var alertHead = $('<div class="alertHead">' + alertIcon + obj.title + "</div>");
    var alertMes = $('<div class="alertMes">' + obj.message + "</div>");
    var alertBtn = $('<span class="alertBtn">' + obj.okbtntext + "</span>").on("click", function () {
      qback.remove();
      alertBox.remove();
    });
    alertBox.append(alertHead);
    alertBox.append(alertMes);
    alertBox.append(alertBtn);
    qback.append(alertBox);
    $("body").append(qback);
    alertBox.css({ marginTop: -alertBox.outerHeight() / 2 + "px" });
  };
  // confirm弹窗
  _this.Econfirm = function (obj) {
    if (typeof obj.type == "undefined") {
      obj.type = "info";
    }
    if (typeof obj.title == "undefined") {
      obj.title = "提示";
    }
    if (typeof obj.message == "undefined") {
      obj.message = "是否要做些什么？";
    }
    if (typeof obj.okbtntext == "undefined") {
      obj.okbtntext = "确认";
    }
    if (typeof obj.cancelbtntext == "undefined") {
      obj.cancelbtntext = "取消";
    }
    if (typeof obj.define == "undefined") {
      obj.define = function () {
        return true;
      };
    }
    if (typeof obj.cancel == "undefined") {
      obj.cancel = function () {
        return false;
      };
    }
    var confirmBox = $('<div class="alertBox"></div>');
    var confirmIcon = "";
    switch (obj.type) {
      case "success":
        confirmIcon = "<span style='color:#28a745;font-size:25px;'><i class='fa fa-check-circle'></i></span>";
        break;
      case "danger":
        confirmIcon = "<span style='color:#dc3545;font-size:25px;'><i class='fa fa-times-circle'></i></span>";
        break;
      case "warning":
        confirmIcon = "<span style='color:#ffc107;font-size:25px;'><i class='fa fa-exclamation-circle'></i></span>";
        break;
      case "info":
        confirmIcon = "<span style='color:#17a2b8;font-size:25px;'><i class='fa fa-info-circle'></i></span>";
        break;
      case "question":
        confirmIcon = "<span style='color:#6c757d;font-size:25px;'><i class='fa fa-question-circle'></i></span>";
        break;
      default:
        confirmIcon = obj.type;
        break;
    }
    var confirmHead = $('<div class="alertHead">' + confirmIcon + obj.title + "</div>");
    var confirmMes = $('<div class="alertMes">' + obj.message + "</div>");
    var confirmBtn = $('<button type="button" class="btn btn-primary ConBtn">' + obj.okbtntext + "</button>").on("click", function () {
      qback.remove();
      confirmBox.remove();
      setTimeout(function () {
        obj.define();
      }, 100);
    });
    var confirmcancel = $('<button type="button" class="btn btn-light cancel">' + obj.cancelbtntext + "</button>").on("click", function () {
      qback.remove();
      confirmBox.remove();
      setTimeout(function () {
        obj.cancel();
      }, 100);
    });
    confirmBox.append(confirmHead);
    confirmBox.append(confirmMes);
    confirmBox.append(confirmBtn);
    confirmBox.append(confirmcancel);
    qback.append(confirmBox);
    $("body").append(qback);
    confirmBox.css({ marginTop: -confirmBox.outerHeight() / 2 + "px" });
  }, _this.Etoast = function (obj) {
    if (typeof obj.type == "undefined") {
      obj.type = "info";
    }
    if (typeof obj.message == "undefined") {
      obj.message = "提示些什么";
    }
    if (typeof obj.time == "undefined") {
      obj.time = 20;
    }
    var ico = "";
    switch (obj.type) {
      case "success":
        ico = "<i class='fa fa-check-circle'></i>";
        break;
      case "danger":
        ico = "<i class='fa fa-times-circle'></i>";
        break;
      case "warning":
        ico = "<i class='fa fa-exclamation-circle'></i>";
        break;
      case "info":
        ico = "<i class='fa fa-info-circle'></i>";
        break;
      default:
        ico = obj.type;
        break;
    }
    var timer = null;
    var ToastBox = $('<div class="ToastBox ToastBox-' + obj.type + '">' + ico + obj.message + "</div>");
    qback.append(ToastBox);
    $("body").append(qback);
    ToastBox.css({ marginTop: -ToastBox.outerHeight() / 2 + "px" });
    clearInterval(timer);
    timer = setInterval(function () {
      obj.time--;
      if (obj.time <= 0) {
        clearInterval(timer);
        qback.remove();
        ToastBox.remove();
      }
    }, 100);
  };
};

/***/ }),

/***/ 2:
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(0);
            var content = __webpack_require__(3);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ 21:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var validate = exports.validate = {
  loginname: function loginname(str, el) {
    str = str.trim();
    if (str == "") {
      validate.showTheErrorInfo(el, "登录名不可为空");
      return false;
    }
    return true;
  },
  /** 密码格式
   * @param {string} str 用户输入密码
   * @param {string} el 错误信息容器id
   */
  password: function password(str, el) {
    str = str.trim();
    if (str == "") {
      validate.showTheErrorInfo(el, "密码不可为空");
      return false;
    }
    if (str.length < 6) {
      validate.showTheErrorInfo(el, "密码不可小于6位");
      return false;
    }
    return true;
  },
  /** 确认密码格式
   * @param {string} str1 第一次密码
   * @param {string} str2 第二次密码
   * @param {string} el 错误信息容器id
   */
  passwordAgain: function passwordAgain(str1, str2, el) {
    str1 = str1.trim();
    str2 = str2.trim();
    if (str2 == "") {
      validate.showTheErrorInfo(el, "密码不可为空");
      return false;
    }
    if (str1 != str2) {
      validate.showTheErrorInfo(el, "两次输入密码不一致");
      return false;
    }
    return true;
  },
  /** 验证用户名格式
   * @param {string} str 用户所填用户名
   * @param {string} el 错误信息容器id
   * @param {Boolean} canusetel 是否可用手机号
   */
  username: function username(str, el, canusetel) {
    str = str.trim();
    if (str == "") {
      validate.showTheErrorInfo(el, "用户名不可为空");
      return false;
    }
    if (!/^[a-zA-Z0-9_]{4,16}$/.test(str)) {
      validate.showTheErrorInfo(el, "用户名只可为4-16位字母、数字或下划线");
      return false;
    }
    if (!canusetel) {
      if (/^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,5-9]))\d{8}$/.test(str)) {
        validate.showTheErrorInfo(el, "手机号不能当作用户名");
        return false;
      }
    }
    return true;
  },
  /** 验证手机号格式
   * @param {string} str 用户所填手机号
   * @param {string} el 错误信息容器id
   * @param {Boolean} canempty 是否可空
   */
  tel: function tel(str, el, canempty) {
    str = str.trim();
    if (canempty) {
      if (str != "") {
        if (!/^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,3-9]))\d{8}$/.test(str)) {
          validate.showTheErrorInfo(el, "手机号格式有误");
          return false;
        }
      }
    } else {
      if (str == "") {
        validate.showTheErrorInfo(el, "手机号不可为空");
        return false;
      }
      if (!/^((13[0-9])|(14[5|7])|(15([0-3]|[5-9]))|(18[0,3-9]))\d{8}$/.test(str)) {
        validate.showTheErrorInfo(el, "手机号格式有误");
        return false;
      }
    }
    return true;
  },
  /** 验证邮箱格式
   * @param {string} str 用户所填邮箱
   * @param {string} el 错误信息容器id
   * @param {boolean} canempty 是否可空
   */
  mail: function mail(str, el, canempty) {
    if (canempty) {
      if (str != "") {
        if (!/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(str)) {
          validate.showTheErrorInfo(el, "邮箱格式不正确");
          return false;
        }
      }
    } else {
      if (str == "") {
        validate.showTheErrorInfo(el, "邮箱不可为空");
        return false;
      }
      if (!/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/.test(str)) {
        validate.showTheErrorInfo(el, "邮箱格式不正确");
        return false;
      }
    }
    return true;
  },
  code: function code(str, el) {
    if (str == "") {
      validate.showTheErrorInfo(el, "验证码不可为空");
      return false;
    }
    if (!/\d{6}$/.test(str)) {
      validate.showTheErrorInfo(el, "验证码格式有误");
      return false;
    }
    return true;
  },
  /** 显示指定错误信息
   * @param {string} el 错误信息容器id
   * @param {string} info 错误信息内容
   */
  showTheErrorInfo: function showTheErrorInfo(el, info) {
    el.innerHTML = info;
    el.style.visibility = "visible";
  },
  /** 隐藏指定错误信息
   * @param {string} el 错误信息容器id
   */
  hideTheErrorInfo: function hideTheErrorInfo(el) {
    el.innerHTML = "";
    el.style.visibility = "hidden";
  },
  /** 隐藏所有错误信息 */
  hideAllErrorInfo: function hideAllErrorInfo() {
    $(".errinfo-login").css("visibility", "hidden");
  },
  /** 图形验证码是否正确
   * @param {*} temp_obj 临时存储gVerify对象引用
   * @param {*} val 要验证的值
   * @param {*} el 呈现错误信息的元素
   * @returns
   */
  gVerifyValidate: function gVerifyValidate(temp_obj, val, el) {
    if (val == "") {
      validate.showTheErrorInfo(el, "图形验证码不可为空");
      return false;
    }
    if (temp_obj.validate(val) == false) {
      validate.showTheErrorInfo(el, "图形验证码不正确，如看不清请点击图片刷新");
      return false;
    }
    return true;
  },
  /** 一旦开始输入清空所有错误信息 */
  beginInputClearErrorInfo: function beginInputClearErrorInfo() {
    $(".form-control").on("input", function () {
      validate.hideAllErrorInfo();
    });
  },
  /** 初始化数字类型的输入框不许输入数字以外的字符 */
  setNumberInputForbidChar: function setNumberInputForbidChar() {
    $(".input-number").keypress(function (e) {
      return (/[\d]/.test(String.fromCharCode(e.keyCode))
      );
    });
  },
  /** 初始化限制数字类型的输入框最大长度
   * @param {string} inputid -输入框id
   * @param {number} maxlen -输入框最大长度
   */
  setNumberInputMaxLen: function setNumberInputMaxLen(input, maxlen) {
    $(input).on("input", function () {
      var str = $(input).val();
      var temp = str.length;
      if (temp >= maxlen) {
        $(input).val($(input).val().slice(0, maxlen));
      }
    });
  }
};

/***/ }),

/***/ 3:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(1);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "@charset \"UTF-8\";\r\n/**\r\n * @Copyright: Copyright © 2019\r\n * @Created on 2019-12-22\r\n * @Author:Panda_YueTao\r\n * @Version 1.15\r\n * @Title: 妈叔出品-LaTeX公式编辑器样式表\r\n */\r\n\r\n/* #region textarea禁止拖动改变大小 */\r\ntextarea {\r\n  resize: none;\r\n  cursor: text;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 图片不可圈选、宽度100% */\r\nimg {\r\n  width: 100%;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -khtml-user-select: none;\r\n  -ms-user-select: none;\r\n}\r\n.card {\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -khtml-user-select: none;\r\n  -ms-user-select: none;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 禁用bootstrap点击按钮时边框高亮样式 */\r\n.btn:focus,\r\n.btn:active:focus,\r\n.btn.active:focus,\r\n.btn.focus,\r\n.btn:active.focus,\r\n.btn.active.focus {\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.btn-group .btn-outline-primary.myactive {\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n/* #endregion */\r\n\r\n/* #region placeholder字体颜色 */\r\n.form-control::-webkit-input-placeholder {\r\n  color: #ddd;\r\n  opacity: 1;\r\n}\r\n\r\n.form-control::-moz-placeholder {\r\n  color: #ddd;\r\n  opacity: 1;\r\n}\r\n\r\n.form-control:-ms-input-placeholder {\r\n  color: #ddd;\r\n  opacity: 1;\r\n}\r\n\r\n.form-control::-ms-input-placeholder {\r\n  color: #ddd;\r\n  opacity: 1;\r\n}\r\n\r\n.form-control::placeholder {\r\n  color: #ddd;\r\n  opacity: 1;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 字体图标向左偏移 */\r\ni {\r\n  margin: auto 0.4rem auto 0.1rem;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 禁用bootstrap焦点时边框高亮样式 */\r\n.form-control:focus {\r\n  color: #495057;\r\n  background-color: #fff;\r\n  border-color: #ced4da;\r\n  outline: 0;\r\n  box-shadow: 0 0 0 0rem rgba(0, 123, 255, 0.25);\r\n}\r\n/* #endregion */\r\n\r\n/* #region 对齐 */\r\n.c {\r\n  text-align: center;\r\n}\r\n\r\n.l {\r\n  text-align: left;\r\n}\r\n\r\n.r {\r\n  text-align: right;\r\n}\r\n\r\n.fleft {\r\n  float: left;\r\n}\r\n\r\n.fright {\r\n  float: right;\r\n}\r\n\r\n/* #endregion */\r\n\r\n/* #region tooltip泡泡 */\r\n.tippy-box[data-theme~=\"mythem\"] {\r\n  background-color: #000;\r\n  color: #fff;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n}\r\n.tippy-box[data-theme~=\"mythem\"][data-placement^=\"top\"] > .tippy-arrow::before {\r\n  border-right-color: #000;\r\n  opacity: 0.7;\r\n}\r\n.tippy-box[data-theme~=\"mythem\"][data-placement^=\"right\"] > .tippy-arrow::before {\r\n  border-right-color: #000;\r\n  opacity: 0.7;\r\n}\r\n.tippy-box[data-theme~=\"mythem\"][data-placement^=\"bottom\"] > .tippy-arrow::before {\r\n  border-right-color: #000;\r\n  opacity: 0.7;\r\n}\r\n.tippy-box[data-theme~=\"mythem\"][data-placement^=\"left\"] > .tippy-arrow::before {\r\n  border-right-color: #000;\r\n  opacity: 0.7;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 弹出框 */\r\n.qback {\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 9999999999999999999999;\r\n}\r\n.alertBox {\r\n  width: 452px;\r\n  height: auto;\r\n  padding: 0 15px 20px 15px;\r\n  box-sizing: border-box;\r\n  background: #fff;\r\n  border-radius: 8px;\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin: -167px 0 0 -226px;\r\n  box-shadow: 4px 4px 4px 1px rgba(0, 0, 0, 0.2);\r\n  border: 1px solid rgba(0, 0, 0, 0.05);\r\n}\r\n.alertHead {\r\n  width: 100%;\r\n  height: 45px;\r\n  border-bottom: 1px solid #99bafa;\r\n  font-size: 18px;\r\n  color: #333;\r\n  line-height: 45px;\r\n  text-align: left;\r\n}\r\n.alertMes {\r\n  width: 100%;\r\n  height: auto;\r\n  overflow: hidden;\r\n  padding: 25px 40px 35px;\r\n  text-align: center;\r\n  font-size: 16px;\r\n  color: #333;\r\n  box-sizing: border-box;\r\n  line-height: 28px;\r\n}\r\n.alertBtn {\r\n  display: block;\r\n  width: 100px;\r\n  height: 34px;\r\n  line-height: 34px;\r\n  background-color: #007bff;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n  border: 1px solid transparent;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n}\r\n.ConBtn {\r\n  display: inline-block;\r\n  width: 100px;\r\n  height: 34px;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  margin-left: 84px;\r\n  margin-right: 47px;\r\n  padding-bottom: 0.2rem auto;\r\n}\r\n.cancel {\r\n  display: inline-block;\r\n  width: 100px;\r\n  height: 34px;\r\n  font-size: 15px;\r\n  text-align: center;\r\n  padding-bottom: 0.2rem auto;\r\n}\r\n.ToastBox {\r\n  width: 452px;\r\n  height: auto;\r\n  padding: 15px 20px;\r\n  text-align: center;\r\n  /* background: rgba(0, 0, 0, 0.4); */\r\n  /* color: #fff; */\r\n  font-size: 16px;\r\n  border-radius: 8px;\r\n  line-height: 24px;\r\n  position: relative;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin: 0px 0px 0px -226px;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -khtml-user-select: none;\r\n  -ms-user-select: none;\r\n}\r\n.ToastBox-success {\r\n  color: #155724;\r\n  background-color: #d4edda;\r\n  border-color: #c3e6cb;\r\n}\r\n.ToastBox-danger {\r\n  color: #721c24;\r\n  background-color: #f8d7da;\r\n  border-color: #f5c6cb;\r\n}\r\n.ToastBox-warning {\r\n  color: #856404;\r\n  background-color: #fff3cd;\r\n  border-color: #ffeeba;\r\n}\r\n.ToastBox-info {\r\n  color: #0c5460;\r\n  background-color: #d1ecf1;\r\n  border-color: #bee5eb;\r\n}\r\n\r\n/* #endregion */\r\n\r\n/* #region 输入框垂直居中 */\r\ninput {\r\n  vertical-align: middle;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 去除type=number的选择按钮 */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n}\r\ninput[type=\"number\"] {\r\n  -moz-appearance: textfield;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 去除bootstrap按钮按下不弹起的特效 */\r\n.btn-default:focus,\r\nbtn-default.focus {\r\n  color: #333;\r\n  background-color: #fff;\r\n  border-color: #ccc;\r\n}\r\n.btn-default:hover {\r\n  color: #333;\r\n  background-color: #e6e6e6;\r\n  border-color: #adadad;\r\n}\r\n.btn-primary:focus,\r\n.btn-primary.focus {\r\n  color: #fff;\r\n  background-color: #337ab7;\r\n  border-color: #2e6da4;\r\n}\r\n.btn-primary:hover {\r\n  color: #fff;\r\n  background-color: #286090;\r\n  border-color: #204d74;\r\n}\r\n.btn-success:focus,\r\n.btn-success.focus {\r\n  color: #fff;\r\n  background-color: #5cb85c;\r\n  border-color: #4cae4c;\r\n}\r\n.btn-success:hover {\r\n  color: #fff;\r\n  background-color: #449d44;\r\n  border-color: #398439;\r\n}\r\n.btn-info:focus,\r\n.btn-info.focus {\r\n  color: #fff;\r\n  background-color: #5bc0de;\r\n  border-color: #46b8da;\r\n}\r\n.btn-info:hover {\r\n  color: #fff;\r\n  background-color: #31b0d5;\r\n  border-color: #269abc;\r\n}\r\n.btn-warning:focus,\r\n.btn-warning.focus {\r\n  color: #fff;\r\n  background-color: #f0ad4e;\r\n  border-color: #eea236;\r\n}\r\n.btn-warning:hover {\r\n  color: #fff;\r\n  background-color: #ec971f;\r\n  border-color: #d58512;\r\n}\r\n.btn-danger:focus,\r\n.btn-danger.focus {\r\n  color: #fff;\r\n  background-color: #d9534f;\r\n  border-color: #d43f3a;\r\n}\r\n.btn-danger:hover {\r\n  color: #fff;\r\n  background-color: #c9302c;\r\n  border-color: #ac2925;\r\n}\r\n/* #endregion */\r\n\r\n/* #region 改变bootstrap默认card-header高度 */\r\n.card-header {\r\n  height: 3rem;\r\n}\r\n/* #endregion */\r\n\r\n/*TODO:特事特办：解决右上角菜单被遮挡的问题*/\r\n#navbar-header {\r\n  z-index: 9;\r\n}\r\n", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 4:
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(0);
            var content = __webpack_require__(5);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(1);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "#navbar-header {\r\n  position: sticky;\r\n  top: 0;\r\n}\r\n\r\n#img-nav-portrait {\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  margin-right: 6px;\r\n}\r\n#ver_h1 {\r\n  padding: 0px 4px;\r\n  font-size: 0.1rem;\r\n}", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 6:
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(0);
            var content = __webpack_require__(7);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ 66:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


__webpack_require__(2);

__webpack_require__(4);

__webpack_require__(6);

__webpack_require__(67);

var _item = __webpack_require__(10);

var _eject = __webpack_require__(14);

var _theme = __webpack_require__(8);

var _api = __webpack_require__(11);

var _verify = __webpack_require__(9);

var _element = __webpack_require__(69);

var _login = __webpack_require__(70);

var _validate = __webpack_require__(21);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ApiOption = function ApiOption() {
  _classCallCheck(this, ApiOption);

  ApiOption.prototype.path_api = Config[Environment].WebAPI;
};

var VerifyOption = function VerifyOption() {
  _classCallCheck(this, VerifyOption);

  VerifyOption.prototype.obj_api = _api.api;
};

var LoginOption = function LoginOption() {
  _classCallCheck(this, LoginOption);

  LoginOption.prototype.obj_stringDeal = _item.StringDeal;
  LoginOption.prototype.el = _element.element_login;
  LoginOption.prototype.obj_api = _api.api;
  LoginOption.prototype.obj_eject = new _eject.Eject();
  LoginOption.prototype.obj_validate = _validate.validate;
  LoginOption.prototype.appid = Config[Environment].WXLogin.AppID;
  LoginOption.prototype.redirectURL = Config[Environment].WXLogin.RedirectURL;
};

var api_opt = new ApiOption();
var verify_opt = new VerifyOption();
var login_opt = new LoginOption();

$(function () {
  _theme.theme_except_latex.init_navLink("#btn_href_login");
  _api.api.init(api_opt);
  _verify.LoginVerify.init(verify_opt);
  var wxcode = _verify.LoginVerify.getUrlParm("code");
  if (wxcode != false && wxcode != "") {
    LoginOption.prototype.wxcode = wxcode;
  } else {
    LoginOption.prototype.wxcode = false;
  }
  _verify.LoginVerify.showNavLogin();
  _login.login.init(login_opt);
  _item.LoadComplete.closeLoadingMask();
});

/***/ }),

/***/ 67:
/***/ (function(module, exports, __webpack_require__) {

var api = __webpack_require__(0);
            var content = __webpack_require__(68);

            content = content.__esModule ? content.default : content;

            if (typeof content === 'string') {
              content = [[module.i, content, '']];
            }

var options = {};

options.insert = "head";
options.singleton = false;

var update = api(content, options);



module.exports = content.locals || {};

/***/ }),

/***/ 68:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(1);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "body {\r\n  overflow-y: scroll;\r\n}\r\n.login-tab {\r\n  margin-top: 6rem;\r\n}\r\n.login-form {\r\n  margin-top: 2rem;\r\n  padding: 2rem auto auto auto;\r\n}\r\n.container {\r\n  min-width: 360px;\r\n}\r\n#wrap_content_of_logintype {\r\n  width: 70%;\r\n  margin: 0 auto;\r\n}\r\n.wrap-quote {\r\n  margin: 1rem auto;\r\n  text-align: center;\r\n}\r\n.wrap-quote p,\r\n.wrap-quote a {\r\n  font-size: 0.7rem;\r\n}\r\n.wrap-submit-button {\r\n  margin-top: 2rem;\r\n}\r\n.input-group-text {\r\n  padding: 0.375rem 0.65rem 0.375rem 0.85rem;\r\n}\r\n.awefont-pic {\r\n  padding: 0.375rem 0.46rem 0.375rem 0.61rem;\r\n}\r\n.errinfo-login {\r\n  font-size: 0.5rem;\r\n  color: #dc3545;\r\n  margin: 0.2rem auto 0.2rem auto;\r\n  visibility: hidden;\r\n}\r\n.form-group {\r\n  margin-bottom: 0;\r\n}\r\n.mustfill {\r\n  color: #dc3545;\r\n  font-size: 1.2rem;\r\n  margin-left: 0.2rem;\r\n}\r\n\r\n#wrap_other_login {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n#wrap_other_login a {\r\n  margin: 0 1rem 0 1rem;\r\n}\r\n\r\n#wrap_other_login img {\r\n  margin-bottom: 6rem;\r\n  flex-grow: 1;\r\n  border-radius: 15px;\r\n}\r\n#title-other-login {\r\n  text-align: center;\r\n  color: #888888;\r\n  margin: 1.5rem auto 2rem auto;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.wrap-gototab{\r\n  margin: 1rem auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.wrap-gototab-left {\r\n  flex-grow: 1;\r\n  font-size: 0.7rem;\r\n}\r\n\r\n.wrap-gototab-right {\r\n  flex-grow: 1;\r\n  text-align: right;\r\n  font-size: 0.7rem;\r\n}\r\n", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 69:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var element_login = exports.element_login = {
  accountWrap: document.getElementById("wrap_account"),
  accountLoginName: document.getElementById("input_loginname"),
  accountLoginNameError: document.getElementById("errinfo_loginname"),
  accountLoginPassword: document.getElementById("input_loginpassword"),
  accountLoginPasswordError: document.getElementById("errinfo_loginpassword"),
  accountGVerify: document.getElementById("input_verify_code1"),
  accountGverifyError: document.getElementById("errinfo_verify_code1"),
  accountGVerifyCanvas: document.getElementById("canvan_verify_code1"),
  accountLoginButton: document.getElementById("btn_login_account"),
  accountToMessageButton: document.getElementById("a_gotomessage_account"),
  accountToRegButton: document.getElementById("a_gotoreg_account"),

  messageWrap: document.getElementById("wrap_messagecode"),
  messageCodeLoginTel: document.getElementById("input_logintel"),
  messageCodeLoginTelError: document.getElementById("errinfo_logintel"),
  messageCodeGVerify: document.getElementById("input_verify_code2"),
  messageCodeGverifyError: document.getElementById("errinfo_verify_code2"),
  messageCodeGVerifyCanvas: document.getElementById("canvan_verify_code2"),
  messageCodeCode: document.getElementById("input_loginmessagecode"),
  messageCodeCodeError: document.getElementById("errinfo_loginmessagecode"),
  messageCodeSendButton: document.getElementById("btn_send_message_verifycode"),
  messageCodeLoginButton: document.getElementById("btn_login_message"),
  messageCodeToAccountButton: document.getElementById("a_gotoaccount_messagecode"),
  messageCodeToRegButton: document.getElementById("a_gotoreg_messagecode"),

  regWrap: document.getElementById("wrap_reg"),
  regUsername: document.getElementById("input_regusername"),
  regUsernameError: document.getElementById("errinfo_regusername"),
  regPassword: document.getElementById("input_regpassword"),
  regPasswordError: document.getElementById("errinfo_regpassword"),
  regPasswordAgain: document.getElementById("input_regpasswordagain"),
  regPasswordAgainError: document.getElementById("errinfo_regpasswordagain"),
  regTel: document.getElementById("input_regtel"),
  regTelError: document.getElementById("errinfo_regtel"),
  regMail: document.getElementById("input_regmail"),
  regMailError: document.getElementById("errinfo_regmail"),
  regGVerify: document.getElementById("input_verify_code4"),
  regGverifyError: document.getElementById("errinfo_verify_code4"),
  regGverifyCanvas: document.getElementById("canvan_verify_code4"),
  regRegButton: document.getElementById("btn_reg"),
  regToAccountButton: document.getElementById("a_gotoaccount_reg"),
  regToMessageButton: document.getElementById("a_gotomessage_reg"),

  wxLoginButton: document.getElementById("a_wx_login"),
  qqLoginButton: document.getElementById("a_qq_login"),
  weiboLoginButton: document.getElementById("a_weibo_login")
};

/***/ }),

/***/ 7:
/***/ (function(module, exports, __webpack_require__) {

// Imports
var ___CSS_LOADER_API_IMPORT___ = __webpack_require__(1);
exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.i, "\r\n#footer {\r\n    margin-top: 2rem;\r\n    padding: 1rem;\r\n    background-color: rgba(0, 0, 0, 0.05);\r\n    min-width: 278px;\r\n  }\r\n  #footer .contractme a {\r\n    color: #000;\r\n    font-size: 1.2rem;\r\n    text-decoration: none;\r\n    margin: auto 1rem auto 1rem;\r\n    opacity: 0.4;\r\n  }\r\n  #footer .contractme a img {\r\n    width: 1.2rem;\r\n    height: 1.2rem;\r\n  }\r\n  #wrap_wechat {\r\n    display: inline-block;\r\n    position: relative;\r\n  }\r\n  #eqcode_wechat {\r\n    visibility: hidden;\r\n    position: absolute;\r\n    top: -10rem;\r\n    left: -3.2rem;\r\n    background-color: #fff;\r\n    border: 1px solid rgba(0, 0, 0, 0.15);\r\n    border-radius: 0.25rem;\r\n  }\r\n  #eqcode_wechat img {\r\n    width: 10rem;\r\n    height: 10rem;\r\n    -webkit-user-select: auto;\r\n    -moz-user-select: auto;\r\n    -khtml-user-select: auto;\r\n    -ms-user-select: auto;\r\n  }\r\n  #footer .copyright {\r\n    opacity: 0.5;\r\n    margin-top: 1rem;\r\n  }\r\n  #footer .copyright p,\r\n  #footer .copyright span {\r\n    font-size: 0.8rem;\r\n    margin-bottom: 0.2rem;\r\n  }\r\n  #footer .copyright a {\r\n    color: black;\r\n  }\r\n  #footer .copyright a img {\r\n    width: 1rem;\r\n    height: 1rem;\r\n  }", ""]);
// Exports
module.exports = exports;


/***/ }),

/***/ 70:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var login = exports.login = {
  obj_api: {},
  obj_eject: {},
  obj_validate: {},
  el: {},
  appid: "",
  redirect_url: "",
  timer_remainTime: "",
  currentType: "account",
  docker_gVerify: {},
  timer_gVerify: "",

  init: function init(opt) {
    login.obj_stringDeal = opt.obj_stringDeal;
    login.obj_api = opt.obj_api;
    login.obj_eject = opt.obj_eject;
    login.obj_validate = opt.obj_validate;
    login.el = opt.el;
    login.appid = opt.appid;
    login.redirect_url = opt.redirectURL + "/help"; //TODO:改成login
    login.WX.goLogin(opt);
    login.obj_validate.beginInputClearErrorInfo();
    login.obj_validate.setNumberInputForbidChar();
    login.obj_validate.setNumberInputMaxLen(login.el.accountGVerify, 4);
    login.obj_validate.setNumberInputMaxLen(login.el.messageCodeLoginTel, 11);
    login.obj_validate.setNumberInputMaxLen(login.el.messageCodeGVerify, 4);
    login.obj_validate.setNumberInputMaxLen(login.el.messageCodeCode, 6);
    login.obj_validate.setNumberInputMaxLen(login.el.regTel, 11);
    login.obj_validate.setNumberInputMaxLen(login.el.regGVerify, 4);
    login.switchTab("account");
    login.setOtherLoginImgMouseoverColor();
    login.init_LoginByWechat(login.appid, login.redirect_url);
    login.BindEvent();
  },

  /** 绑定事件 */
  BindEvent: function BindEvent() {
    //默认回车
    $(document).keydown(function (e) {
      if (e.keyCode == 13) {
        switch (login.currentType) {
          case "account":
            $(login.el.accountLoginButton).click();
            break;
          case "message":
            $(login.el.messageCodeLoginButton).click();
            break;
          case "reg":
            $(login.el.regRegButton).click();
            break;
        }
      }
    });

    //#region 提交按钮
    $(login.el.regRegButton).click(function () {
      login.Reg.goReg();
    });
    $(login.el.accountLoginButton).click(function () {
      login.account.goLogin();
    });
    $(login.el.messageCodeSendButton).click(function () {
      login.message.sendCode();
    });
    $(login.el.messageCodeLoginButton).click(function () {
      login.message.goLogin();
    });
    $(login.el.messageCodeLoginTel).blur(function () {
      login.message.setSendButtonEnable();
    });
    //#endregion

    //#region 切换
    $(login.el.accountToRegButton).click(function () {
      login.switchTab("reg");
    });
    $(login.el.accountToMessageButton).click(function () {
      login.switchTab("message");
    });
    $(login.el.messageCodeToAccountButton).click(function () {
      login.switchTab("account");
    });
    $(login.el.messageCodeToRegButton).click(function () {
      login.switchTab("reg");
    });
    $(login.el.regToAccountButton).click(function () {
      login.switchTab("account");
    });
    $(login.el.regToMessageButton).click(function () {
      login.switchTab("message");
    });
    //#endregion
  },

  /** 切换tab
   * @param {*} type account/message/reg
   */
  switchTab: function switchTab(type) {
    var wrap = {};
    var canvasid = "";
    switch (type) {
      case "account":
        wrap = login.el.accountWrap;
        canvasid = login.el.accountGVerifyCanvas.id;
        break;
      case "message":
        wrap = login.el.messageWrap;
        canvasid = login.el.messageCodeGVerifyCanvas.id;
        break;
      case "reg":
        wrap = login.el.regWrap;
        canvasid = login.el.regGverifyCanvas.id;
        break;
    }
    login.makeVerifyCodeImg(canvasid);
    $(".login-form").css("display", "none");
    $(wrap).css("display", "block");
  },

  /** 初始化页微信登录 */
  init_LoginByWechat: function init_LoginByWechat(appid, redirect_url) {
    var href_wx = "https://open.weixin.qq.com/connect/qrconnect?appid=" + appid + "&redirect_uri=" + redirect_url + "&response_type=code&scope=snsapi_login&state=STATE#wechat_redirect";
    login.el.wxLoginButton.href = href_wx;
  },

  /** 设置第三方登录图标的样式和动画 */
  setOtherLoginImgMouseoverColor: function setOtherLoginImgMouseoverColor() {
    $("#wrap_other_login img").mouseenter(function () {
      $(this).css("box-shadow", "0px 0px 10px #888888");
    });
    $("#wrap_other_login img").mouseleave(function () {
      $(this).css("box-shadow", "0 0 0 #fff");
    });
  },

  /** 微信登录封装 */
  WX: {
    goLogin: function goLogin(opt) {
      if (opt.wxcode != false) {
        login.obj_api.loginByWX(opt.wxcode).then(function (re) {
          if (re.result == 0) {
            login.obj_eject.Etoast({
              type: "success",
              message: "登录成功,即将跳转回编辑器页"
            });
            setTimeout(function () {
              window.location.href = "../home";
            }, 2000);
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
          history.pushState({}, "", "login?code=");
        });
      }
    }
  },

  /** 账户登录封装 */
  account: {
    goLogin: function goLogin() {
      var v1 = login.account.loginname();
      var v2 = login.account.password();
      var v3 = login.account.gVerify();
      if (v1.r && v2.r && v3.r) {
        var v2_md5 = login.obj_stringDeal.toMD5(v2.val);
        login.obj_api.loginByAccount(v1.val, v2_md5).then(function (re) {
          if (re.result == 0) {
            login.obj_eject.Etoast({
              type: "success",
              message: "登录成功,即将跳转回编辑器页"
            });
            setTimeout(function () {
              window.location.href = "../home";
            }, 2000);
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
        });
      }
    },
    loginname: function loginname() {
      var str = login.el.accountLoginName.value;
      var el = login.el.accountLoginNameError;
      return {
        r: login.obj_validate.loginname(str, el),
        val: str
      };
    },
    password: function password() {
      var str = login.el.accountLoginPassword.value;
      var el = login.el.accountLoginPasswordError;
      return {
        r: login.obj_validate.password(str, el),
        val: str
      };
    },
    gVerify: function gVerify() {
      var obj = login.docker_gVerify;
      var val = login.el.accountGVerify.value;
      var el = login.el.accountGverifyError;
      return {
        r: login.obj_validate.gVerifyValidate(obj, val, el)
      };
    }
  },

  /** 短信登录封装 */
  message: {
    intervalObj: "",
    setSendButtonEnable: function setSendButtonEnable() {
      var v1 = login.message.tel();
      if (v1.r) {
        login.obj_api.getRemainTime(v1.val).then(function (re) {
          if (re.result == 0) {
            if (re.detail.remaintime != 0) {
              login.message.startSendLock(re.detail.remaintime);
            } else {
              login.message.stopSendLock();
            }
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
        });
      }
    },
    startSendLock: function startSendLock(time) {
      $(login.el.messageCodeSendButton).attr({ disabled: "disabled" });
      var second = time;
      login.message.intervalObj = setInterval(function () {
        $(login.el.messageCodeSendButton).text("请" + second + "秒后尝试");
        if (second == 0) {
          login.message.stopSendLock();
        }
        second--;
      }, 1000);
    },
    stopSendLock: function stopSendLock() {
      clearInterval(login.message.intervalObj);
      $(login.el.messageCodeSendButton).text("发送验证码");
      $(login.el.messageCodeSendButton).removeAttr("disabled");
    },
    sendCode: function sendCode() {
      var v1 = login.message.tel();
      var v2 = login.message.gVerify();
      if (v1.r && v2.r) {
        login.obj_api.sendMessageCode_Login(v1.val).then(function (re) {
          if (re.result == 0) {
            login.message.setSendButtonEnable();
            login.obj_eject.Etoast({
              type: "success",
              message: re.detail.info
            });
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
        });
      }
    },
    goLogin: function goLogin() {
      var v1 = login.message.tel();
      var v2 = login.message.gVerify();
      var v3 = login.message.code();
      if (v1.r && v2.r && v3.r) {
        login.obj_api.loginByMessage(v1.val, v3.val).then(function (re) {
          if (re.result == 0) {
            login.obj_eject.Etoast({
              type: "success",
              message: "登录成功,即将跳转回编辑器页"
            });
            setTimeout(function () {
              window.location.href = "../home";
            }, 2000);
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
        });
      }
    },
    tel: function tel() {
      var str = login.el.messageCodeLoginTel.value;
      var el = login.el.messageCodeLoginTelError;
      return {
        r: login.obj_validate.tel(str, el, false),
        val: str
      };
    },
    gVerify: function gVerify() {
      var obj = login.docker_gVerify;
      var val = login.el.messageCodeGVerify.value;
      var el = login.el.messageCodeGverifyError;
      return {
        r: login.obj_validate.gVerifyValidate(obj, val, el)
      };
    },
    code: function code() {
      var str = login.el.messageCodeCode.value;
      var el = login.el.messageCodeCodeError;
      return {
        r: login.obj_validate.code(str, el),
        val: str
      };
    }
  },

  /** 注册封装 */
  Reg: {
    goReg: function goReg() {
      var v1 = login.Reg.username();
      var v2 = login.Reg.password();
      var v3 = login.Reg.passwordAgain();
      var v4 = login.Reg.tel();
      var v5 = login.Reg.mail();
      var v6 = login.Reg.gVerify();
      if (v1.r && v2.r && v3.r && v4.r && v5.r && v6.r) {
        var v2_md5 = login.obj_stringDeal.toMD5(v2.val);
        login.obj_api.regByAccount(v1.val, v2_md5, v4.val, v5.val).then(function (re) {
          if (re.result == 0) {
            login.obj_eject.Etoast({
              type: "success",
              message: "注册成功,直接用此账号登录"
            });
            setTimeout(function () {
              window.location.href = "../home";
            }, 2500);
          } else {
            login.obj_eject.Etoast({
              type: "warning",
              message: re.detail.errinfo
            });
          }
        });
      }
    },
    username: function username() {
      var str = login.el.regUsername.value;
      var el = login.el.regUsernameError;
      return {
        r: login.obj_validate.username(str, el, false),
        val: str
      };
    },
    password: function password() {
      var str = login.el.regPassword.value;
      var el = login.el.regPasswordError;
      return {
        r: login.obj_validate.password(str, el),
        val: str
      };
    },
    passwordAgain: function passwordAgain() {
      var str1 = login.el.regPassword.value;
      var str2 = login.el.regPasswordAgain.value;
      var el = login.el.regPasswordAgainError;
      return {
        r: login.obj_validate.passwordAgain(str1, str2, el)
      };
    },
    tel: function tel() {
      var str = login.el.regTel.value;
      var el = login.el.regTelError;
      return {
        r: login.obj_validate.tel(str, el, true),
        val: str
      };
    },
    mail: function mail() {
      var str = login.el.regMail.value;
      var el = login.el.regMailError;
      return {
        r: login.obj_validate.mail(str, el, true),
        val: str
      };
    },
    gVerify: function gVerify() {
      var obj = login.docker_gVerify;
      var val = login.el.regGVerify.value;
      var el = login.el.regGverifyError;
      return {
        r: login.obj_validate.gVerifyValidate(obj, val, el)
      };
    }
  },

  /** 生成验证码图形
   * @param {string} elid 容器id
   */
  makeVerifyCodeImg: function makeVerifyCodeImg(elid) {
    setTimeout(function () {
      login.docker_gVerify = new GVerify({
        id: elid,
        type: "number",
        canvasId: elid + "_gVerify"
      });
    }, 100);
    //重绘+防抖（暂不用）
    // $(window).resize(function () {
    //   clearTimeout(login.timer_gVerify);
    //   login.timer_gVerify = setTimeout(function () {
    //     login.docker_gVerify = new GVerify({
    //       id: elid,
    //       type: "number",
    //       canvasId: elid + "_gVerify",
    //     });
    //   }, 200);
    // });
  }
};

/***/ }),

/***/ 8:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var theme_except_latex = exports.theme_except_latex = {
  const_boot: "",
  currentTheme: "default",
  map_theme: {},
  init: function init(boot) {
    theme_except_latex.const_boot = boot;
    theme_except_latex.getJSON().then(function (data) {
      theme_except_latex.map_theme = data.root;
      theme_except_latex.getCurrentTheme();
      theme_except_latex.setSingle();
      theme_except_latex.setScroll();
    });
  },
  init_navLink: function init_navLink(el) {
    $(".navbar").css("background-color", "rgba(0,0,0,0.05)");
    $(".nav-link").css("color", "#000000");

    $(el).css("background-color", "rgba(128,128,128,0.20)");
  },
  setSingle: function setSingle() {
    var root = theme_except_latex.map_theme[theme_except_latex.currentTheme].element;
    var len_root = root.length;
    for (var i = 0; i < len_root; i++) {
      var slc = root[i].selecter;
      var stl = root[i].style;
      var len_stl = stl.length;
      for (var m = 0; m < len_stl; m++) {
        $(slc).css(stl[m].key, stl[m].val);
      }
    }
  },
  setScroll: function setScroll() {
    if (theme_except_latex.currentTheme != "default") {
      var cls = "theme-" + theme_except_latex.currentTheme + "-scroll";
      $("body").attr("class", cls);
      $("#toc-doc").attr("class", cls);
      $("#wrap_readme").attr("class", "container-fluid " + cls);
    } else {
      $("body").attr("class", "");
      $("#toc-doc").attr("class", "");
      $("#wrap_readme").attr("class", "container-fluid");
    }
  },
  getJSON: function getJSON() {
    var path = theme_except_latex.const_boot + "/json/map_theme.json";
    var pro = new Promise(function (resolve, reject) {
      $.ajax({
        url: path,
        success: function success(data) {
          resolve(data);
        },
        error: function error(err) {
          reject(err);
        }
      });
    });
    return pro;
  },
  getCurrentTheme: function getCurrentTheme() {
    var keyname = "setting";
    if (localStorage.hasOwnProperty(keyname)) {
      var localdata_str = localStorage.getItem(keyname);
      var localdata_obj = JSON.parse(localdata_str);
      theme_except_latex.currentTheme = localdata_obj.theme;
    }
  }
};

/***/ }),

/***/ 9:
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var LoginVerify = exports.LoginVerify = {
  loginPath: "../login",
  obj_api: {},
  /** 初始化
   * @param {*} opt
   */
  init: function init(opt) {
    LoginVerify.obj_api = opt.obj_api;
  },

  /** 验证是否已经登录
   * @param {*} isRedirect 是否重定向至登录界面
   * @returns
   */
  isLogined: function isLogined(isRedirect) {
    var pro = new Promise(function (resolve, reject) {
      if (isRedirect == undefined || isRedirect == "undefined") {
        isRedirect = false;
      }
      var _mytoken = LoginVerify.obj_api.getMyTokenFromLocal();
      if (_mytoken == false) {
        if (isRedirect) {
          window.location.href = LoginVerify.loginPath;
          reject();
        } else {
          LoginVerify.showNavLogin();
          reject();
        }
      } else {
        LoginVerify.obj_api.loginByMyToken().then(function (re) {
          if (re.result == 0) {
            LoginVerify.showNavPersonal();
            var userinfo = JSON.parse(re.detail.userinfo);
            LoginVerify.setNicknameAndPortrait(userinfo.Portrait, userinfo.Nickname);
            resolve(re.detail);
          } else {
            if (isRedirect) {
              window.location.href = LoginVerify.loginPath;
              reject(re);
            } else {
              LoginVerify.showNavLogin();
              reject(re);
            }
          }
        });
      }
    });
    return pro;
  },

  /** 获得地址栏携带的参数
   * @param {*} key
   * @returns
   */
  getUrlParm: function getUrlParm(key) {
    var query = window.location.search.substring(1);
    var vars = query.split("&");
    for (var i = 0; i < vars.length; i++) {
      var pair = vars[i].split("=");
      if (pair[0] == key) {
        return pair[1];
      }
    }
    return false;
  },

  /** 使导航栏登陆区域呈现[待登录]状态 */
  showNavLogin: function showNavLogin() {
    $("#wrap_btn_href_login").css("display", "block");
    $("#wrap_btn_href_personal").css("display", "none");
  },

  /** 使导航栏登陆区域呈现[已登录-个人信息]状态 */
  showNavPersonal: function showNavPersonal() {
    $("#wrap_btn_href_login").css("display", "none");
    $("#wrap_btn_href_personal").css("display", "block");
  },

  /** 根据后台数据渲染头像和昵称
   * @param {*} src
   * @param {*} nick
   */
  setNicknameAndPortrait: function setNicknameAndPortrait(src, nick) {
    document.getElementById("img-nav-portrait").src = src;
    document.getElementById("span-nav-portrait").innerHTML = nick;
  }
};

/***/ })

/******/ });